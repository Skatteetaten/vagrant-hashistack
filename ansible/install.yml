---
- hosts: all
  become: yes
  tasks:
    - name: Copy ansible directory
      copy:
        src: ./
        dest: /etc/ansible/
        remote_src: yes
        directory_mode: yes
        mode: '0755'

    - name: Install ansible galaxy roles
      command: "ansible-galaxy install {{ item }} -p /etc/ansible/roles/"
      loop: "{{ ansible.galaxy.roles }}"

    - name: Install docker
      include_role:
        name: geerlingguy.docker

    - name: Install systemd unit file
      template: src={{item}}.service.j2 dest=/etc/systemd/system/{{item}}.service
      loop: "{{ hashicorp.daemons }}"

    - name: Create /etc/{{item}}.d
      file:
        path: /etc/{{item}}.d
        state: directory
      loop: "{{ hashicorp.daemons }}"

    - name: Add config.json
      template: src={{item}}.hcl.j2 dest=/etc/{{item}}.d/config.hcl
      loop: "{{ hashicorp.daemons }}"

    - name: Create /etc/nomad.d/policies/ dir
      file:
        path: /etc/nomad.d/policies/
        state: directory

    - name: Create /etc/nomad.d/policies/ dir
      file:
        path: /etc/consul.d/policies/
        state: directory

    - name: Add nomad policies
      copy:
        src: "{{item}}"
        dest: "/etc/nomad.d/policies/"
      with_fileglob:
        - "templates/nomad-policies/*"

    - name: Add consul policies
      copy:
        src: "{{item}}"
        dest: "/etc/consul.d/policies/"
      with_fileglob:
        - "templates/consul-policies/*"

    - name: systemd reload
      systemd: daemon_reload=yes

    - name: Install hashistack
      include_role:
        name: hashistack
      vars:
        software: "{{ item.key }}"
        version: "{{ item.value }}"
      loop: "{{ query('dict', hashicorp.tools) }}"

    - name:  Update message of the day
      template:
        src: "{{item}}"
        dest: "/etc/update-motd.d/{{ (item | basename | splitext)[0] }}"
        mode: "+rx"
      with_fileglob:
        - templates/update-motd.d/*

    - name: CNI - Ensure Dir
      file:
        path: /opt/cni/bin
        state: directory

    - name: CNI - Install
      unarchive:
        src: https://github.com/containernetworking/plugins/releases/download/v0.8.4/cni-plugins-linux-amd64-v0.8.4.tgz
        remote_src: true
        dest: /opt/cni/bin

    - name: CNI - Tune iptables - persist
      copy:
        dest: "/etc/sysctl.d/cni-iptables"
        mode: "+rx"
        content: |
          net.bridge.bridge-nf-call-arptables = 1
          net.bridge.bridge-nf-call-ip6tables = 1
          net.bridge.bridge-nf-call-iptables = 1

    - name: CNI - Tune iptables - run
      command: sysctl --system

    - name: Install Docker SDK for Python
      pip:
        name: docker

# Add change to bash.bashrc in order to use environment in vagrant and ansible (non interactive)
    - name: Copy .env_default
      template:
        src: templates/.env_default.j2
        dest: /home/vagrant/.env_default

    - name: source .env_default .env .env_override
      blockinfile:
        path: /etc/bash.bashrc
        insertbefore: BOF
        marker: "# {mark} ANSIBLE MANAGED BLOCK - Define variables that works in non-interactive shell"
        block: |
          set -a
          . /home/vagrant/.env_default
          # Read file and match variables starting with lowercase - prepend with TF_VAR_ and export.
          while read p || [[ -n $p ]]; do [[ $p =~ ^[[:lower:]].*=.*$ ]] && export TF_VAR_$p; done < /home/vagrant/.env_default

          if [[ -f "/vagrant/.env" ]]; then
              . /vagrant/.env
              # Read file and match variables starting with lowercase - prepend with TF_VAR_ and export.
              while read p || [[ -n $p ]]; do [[ $p =~ ^[[:lower:]].*=.*$ ]] && export TF_VAR_$p; done < /vagrant/.env
          fi
          if [[ -f "/vagrant/.env_override" ]]; then
              . /vagrant/.env_override
              # Read file and match variables starting with lowercase - prepend with TF_VAR_ and export.
              while read p || [[ -n $p ]]; do [[ $p =~ ^[[:lower:]].*=.*$ ]] && export TF_VAR_$p; done < /vagrant/.env_override
          fi
          set +a
