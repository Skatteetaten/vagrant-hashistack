# NB: playbook requires facts
#  - consul.vault.acl.admin_token
#  - consul.vault.acl.producer_token
#  - consul.vault.acl.consumer_token

#######################
### TESTS policies
#######################
# ACL
- name: "{{ service }} - Debug tokens"
  debug:
    msg: "admin token {{ consul.vault.acl.admin_token }}\nproducer token {{consul.vault.acl.producer_token}}\nconsumer token {{consul.vault.acl.consumer_token}}"

- name: "{{ service }} - list acl - admin token - allow"
  shell: consul acl token list
  environment:
    CONSUL_HTTP_TOKEN: "{{ consul.vault.acl.admin_token }}"

- name: "{{ service }} - list acl - producer token - deny"
  shell: consul acl token list
  register: consul_acl_list_try1
  environment:
    CONSUL_HTTP_TOKEN: "{{ consul.vault.acl.producer_token }}"
  failed_when: consul_acl_list_try1.rc == 0

- name: "{{ service }} - list acl - consumer token - deny"
  shell: consul acl token list
  register: consul_acl_list_try2
  environment:
    CONSUL_HTTP_TOKEN: "{{ consul.vault.acl.consumer_token }}"
  failed_when: consul_acl_list_try2.rc == 0

# K/V
## 1 ADMIN
- name: "{{ service }} - write K/V to root '/' - admin token - allow"
  uri:
    # curl -v -X PUT --header "X-Consul-Token: <token>" -d 'my-admin-value' http://127.0.0.1:8500/v1/kv/my-admin-key
    url:  http://127.0.0.1:8500/v1/kv/my-admin-key
    method: PUT
    status_code: 200
    body: "my-admin-value"
    headers:
      X-Consul-Token: "{{ consul.vault.acl.admin_token }}"

## 1 PRODUCER
- name: "{{ service }} - write K/V to root '/' - producer token - deny"
  uri:
    # curl -v -X PUT --header "X-Consul-Token: <token>" -d 'my-producer-value' http://127.0.0.1:8500/v1/kv/will-fail-key
    url:  http://127.0.0.1:8500/v1/kv/will-fail-key
    method: PUT
    body: "my-producer-value"
    status_code: 403
    return_content: yes
    headers:
      X-Consul-Token: "{{ consul.vault.acl.producer_token }}"

- name: "{{ service }} - write K/V to /team/producer1 - producer token - allow"
  uri:
    # curl -v -X PUT --header "X-Consul-Token: <token>" -d 'my-producer-value' http://127.0.0.1:8500/v1/kv/team/producer1/my-producer-key
    url:  http://127.0.0.1:8500/v1/kv/team/producer1/my-producer-key
    method: PUT
    body: "my-producer-value"
    status_code: 200
    return_content: yes
    headers:
      X-Consul-Token: "{{ consul.vault.acl.producer_token }}"

## Consumer
- name: "{{ service }} - read K/V from /my-admin-key - consumer token - deny"
  uri:
    # curl -v -X PUT --header "X-Consul-Token: <token>" -d 'my-producer-value' http://127.0.0.1:8500/v1/kv/team/producer1/my-producer-key
    url:  http://127.0.0.1:8500/v1/kv/my-admin-key
    method: GET
    status_code: 403
    headers:
      X-Consul-Token: "{{ consul.vault.acl.consumer_token }}"

- name: "{{ service }} - read K/V from /team/producer1/my-producer-key - consumer token - deny"
  uri:
    # curl -v -X PUT --header "X-Consul-Token: <token>" -d 'my-producer-value' http://127.0.0.1:8500/v1/kv/team/producer1/my-producer-key
    url:  http://127.0.0.1:8500/v1/kv/team/producer1/my-producer-key
    method: GET
    status_code: 403
    headers:
      X-Consul-Token: "{{ consul.vault.acl.consumer_token }}"

### Intentions
## Producer token
- name: "{{ service }} - create intention service1 -> service2 - producer token - success"
  shell: consul intention create service1 service2
  environment:
    CONSUL_HTTP_TOKEN: "{{ consul.vault.acl.producer_token }}"

- name: "{{ service }} intentions - check intention service1 -> service2 - producer token - allowed"
  shell: consul intention check service1 service2
  register: intention_check1
  environment:
    CONSUL_HTTP_TOKEN: "{{ consul.vault.acl.producer_token }}"
  failed_when: intention_check1.stdout is not search('Allowed')

- name: "{{ service }} - check intention non-existing -> to-other-non-existing - producer token - Denied"
  shell: consul intention check non-existing to-other-non-existing
  register: intention_check2
  environment:
    CONSUL_HTTP_TOKEN: "{{ consul.vault.acl.producer_token }}"
  failed_when: intention_check2.stdout is not search('Denied')

- name: "{{ service }} - get intention service1 -> service2 - producer token - Denied"
  shell: consul intention get service1 service2
  environment:
    CONSUL_HTTP_TOKEN: "{{ consul.vault.acl.producer_token }}"

## Consumer token
- name: "{{ service }} - create intention - consumer token - should fail, permission denied"
  shell: consul intention create web1 db1
  register: intention_create1
  environment:
    CONSUL_HTTP_TOKEN: "{{ consul.vault.acl.consumer_token }}"
  failed_when: intention_create1.rc == 0

- name: "{{ service }} intentions - check intention service1 -> service2 - consumer token - fail, deny access"
  shell: consul intention check service1 service2
  register: intention_check3
  environment:
    CONSUL_HTTP_TOKEN: "{{ consul.vault.acl.consumer_token }}"
  failed_when: intention_check3.rc == 0

- name: "{{ service }} - get intention service1 -> service2 - consumer token - Denied"
  shell: consul intention get service1 service2
  environment:
    CONSUL_HTTP_TOKEN: "{{ consul.vault.acl.consumer_token }}"

- name: "{{ service }} - delete intention service1 -> service2 - consumer token - fail, permission denied"
  shell: consul intention delete service1 service2
  register: intention_delete1
  environment:
    CONSUL_HTTP_TOKEN: "{{ consul.vault.acl.consumer_token }}"
  failed_when: intention_delete1.rc == 0


# clean up, delete intention with producer token
- name: "{{ service }} - delete intention service1 -> service2 - producer token - success"
  shell: consul intention delete service1 service2
  environment:
    CONSUL_HTTP_TOKEN: "{{ consul.vault.acl.producer_token }}"
