- name: Set variables
  set_fact:
    consul:
      vault:
        acl:
          admin_token: ""
          producer_token: ""
          consumer_token: ""
    consul_host: "127.0.0.1:8500"
    consul_master_token: "master"
    vault_master_token: "master"
    # reset for future tests
    admin_token: ""
    producer_token: ""
    consumer_token: ""
    # consul policies should be already available -> consul.policy.<policy-name>
    # check /ansible/files/bootstrap/consul/post/task/create-policies.yml

# Already activated in /ansible/files/bootstrap/consul/pre/010-vault-integration.yml
#- name: Vault - enable vault's consul secrets engine
#  shell: vault secrets enable consul
#  environment:
#    VAULT_TOKEN: "{{ vault_master_token }}"

- name: Consul - create management token for Vault, with global-management policy attached to it
  shell:
    cmd: consul acl token create -policy-name=global-management -format=json | jq -r .SecretID
  register: secret_id
  environment:
    CONSUL_HTTP_TOKEN: "{{ consul_master_token }}"

- name: Vault - configure Vault to connect and authenticate to Consul
  shell:
    cmd: vault write consul/config/access address="{{ consul_host }}" token="{{ secret_id.stdout }}"
  environment:
    VAULT_TOKEN: "{{ vault_master_token }}"

# example 1 - Admin policy, admin role
# 1. (Already created) Create consul policy for admin in /ansible/files/bootstrap/consul/post/task/create-policies.yml
# 2. Map role to policy
# 3. Generate token(s)

- name: Vault - map admin role with admin-policy to a Consul ACL policy
  shell:
    cmd: vault write consul/roles/admin-role policies="{{ consul.policy.admin }}"
  register: admin_role_policy_register
  environment:
    VAULT_TOKEN: "{{ vault_master_token }}"

- name: Print admin team policy register
  debug:
    msg: "{{ admin_role_policy_register }}"

- name: Vault - example, generate token for role admin
  shell:
    cmd: vault read consul/creds/admin-role -format=json | jq -r .data.token
  register: admin_role_token
  environment:
    VAULT_TOKEN: "{{ vault_master_token }}"

- name: Print admin role token
  debug:
    msg: "{{ admin_role_token }}"

# example 2 - Producer policy, producer role
# 1. (Already created) Create consul policy for producer in /ansible/files/bootstrap/consul/post/task/create-policies.yml
# 2. Map role to policy
# 3. Generate token(s)

- name: Vault - map producer role with producer-policy to a Consul ACL policy
  shell: vault write consul/roles/producer-role policies="{{ consul.policy.producer }}"
  environment:
    VAULT_TOKEN: "{{ vault_master_token }}"

- name: Vault - example, generate token for role producer
  shell:
    cmd: vault read consul/creds/producer-role -format=json | jq -r .data.token
  register: producer_role_token
  environment:
    VAULT_TOKEN: "{{ vault_master_token }}"

- name: Print producer role token
  debug:
    msg: "{{ producer_role_token }}"

## Todo consumer token
# example 3 - Consumer policy, consumer role
# 1. (Already created) Create consul policy for consumer in /ansible/files/bootstrap/consul/post/task/create-policies.yml
# 2. Map role to policy
# 3. Generate token(s)

- name: Vault - map consumer role with consumer-policy to a Consul ACL policy
  shell: vault write consul/roles/consumer-role policies="{{ consul.policy.consumer }}"
  environment:
    VAULT_TOKEN: "{{ vault_master_token }}"

- name: Vault - example, generate token for role producer
  shell:
    cmd: vault read consul/creds/consumer-role -format=json | jq -r .data.token
  register: consumer_role_token
  environment:
    VAULT_TOKEN: "{{ vault_master_token }}"

- name: Print consumer role token
  debug:
    msg: "{{ consumer_role_token }}"

#######################
### Put tokens generated by vault for consul in vault K/V
#######################
- name: Vault - put generated tokens in k/v as examples
  shell: vault kv put secret/consul-token-example admin_token="{{ admin_token }}" producer_token="{{ producer_token }}" consumer_token="{{ consumer_token }}"
  environment:
    CONSUL_HTTP_TOKEN: "{{ vault_master_token }}"

#######################
### tokens generated by vault -> consul.vault.acl
#######################
- set_fact:
    consul:
      vault:
        acl:
          admin_token: "{{ admin_role_token.stdout }}"
          producer_token: "{{ producer_role_token.stdout }}"
          consumer_token: "{{ consumer_role_token.stdout }}"

#######################
### override tokens registered in /ansible/files/bootstrap/consul/post/task/create-policies.yml, they will be used in tests
#######################
- set_fact:
    admin_token: "{{ admin_role_token.stdout }}"
    producer_token: "{{ producer_role_token.stdout }}"
    consumer_token: "{{ consumer_role_token.stdout }}"
