- name: Vault - enable vault's consul secrets engine
  shell:
    cmd: vault secrets enable consul
  environment:
    VAULT_ADDR: http://127.0.0.1:8200
    VAULT_TOKEN: master

- name: Consul - create management token for Vault, with global-management policy attached to it
  shell:
    cmd: consul acl token create -policy-name=global-management | awk '/SecretID/ {print $2}'
  register: secret_id
  environment:
    CONSUL_HTTP_TOKEN: master

- name: Vault - configure Vault to connect and authenticate to Consul
  shell:
    cmd: vault write consul/config/access address=127.0.0.1:8500 token="{{ secret_id.stdout }}"
  environment:
    VAULT_ADDR: http://127.0.0.1:8200
    VAULT_TOKEN: master

# example 1
# 1. Create consul policy for admin team
# 2. Map role to policy
# 3. Generate token(s)
- name: Consul - create dev team policy
  shell:
    cmd: consul acl policy create -name admin-team-policy -rules @/etc/consul.d/policies/admin.team.policy.hcl
  environment:
    CONSUL_HTTP_TOKEN: master

- name: Vault - map admin-team role with dev-team-policy to a Consul ACL policy
  shell:
    cmd: vault write consul/roles/admin-team policies=admin-team-policy
  environment:
    VAULT_ADDR: http://127.0.0.1:8200
    VAULT_TOKEN: master

- name: Vault - example, generate token for admin-team member
  shell:
    cmd: vault read consul/creds/admin-team | awk '/token/ {print $2}'
  register: admin_team_token
  environment:
    VAULT_ADDR: http://127.0.0.1:8200
    VAULT_TOKEN: master

- name: Print admin team token
  debug:
    msg: "{{ admin_team_token.stdout }}"

# todo: tests

# example 2
# 1. Create consul policy for dev team
# 2. Map role to policy
# 3. Generate token(s)
- name: Consul - create dev team policy
  shell:
    cmd: consul acl policy create -name dev-team-policy -rules @/etc/consul.d/policies/dev.team.policy.hcl
  environment:
    CONSUL_HTTP_TOKEN: master

- name: Vault - map dev-team role with dev-team-policy to a Consul ACL policy
  shell:
    cmd: vault write consul/roles/dev-team policies=dev-team-policy
  environment:
    VAULT_ADDR: http://127.0.0.1:8200
    VAULT_TOKEN: master

- name: Vault - example, generate token for dev-team member
  shell:
    cmd: vault read consul/creds/dev-team | awk '/token/ {print $2}'
  register: dev_team_token
  environment:
    VAULT_ADDR: http://127.0.0.1:8200
    VAULT_TOKEN: master

- name: Print dev team token
  debug:
    msg: "{{ dev_team_token.stdout }}"

# to write/read check dev.team.policy.hcl
# CONSUL_HTTP_TOKEN=<generated_token> consul kv put foo/man lol
# CONSUL_HTTP_TOKEN=<generated_token> consul kv get foo/man
