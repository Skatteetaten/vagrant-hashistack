- name: Vault - enable vault's consul secrets engine
  shell:
    cmd: vault secrets enable consul

- name: Consul - create management token for Vault, with global-management policy attached to it
  shell:
    cmd: consul acl token create -policy-name=global-management -format=json | jq -r .SecretID
  register: secret_id

- name: Vault - configure Vault to connect and authenticate to Consul
  shell:
    cmd: vault write consul/config/access address=127.0.0.1:8500 token="{{ secret_id.stdout }}"

# example 1
# 1. Create consul policy for admin team
# 2. Map role to policy
# 3. Generate token(s)
- name: Consul - create dev team policy
  shell:
    cmd: consul acl policy create -name admin-team-policy -rules @/etc/consul.d/policies/admin.team.policy.hcl

- name: Vault - map admin-team role with dev-team-policy to a Consul ACL policy
  shell:
    cmd: vault write consul/roles/admin-team policies=admin-team-policy

- name: Vault - example, generate token for admin-team member
  shell:
    cmd: vault read consul/creds/admin-team -format=json | jq -r .data.token
  register: admin_team_token

- name: Print admin team token
  debug:
    msg: "{{ admin_team_token.stdout }}"

# test admin.team.policy
- name: Test with admin token - write key-value to root '/' is forbidden
  uri:
    # curl -v -X PUT --header "X-Consul-Token: <token>" -d 'my-admin-value' http://127.0.0.1:8500/v1/kv/my-admin-key
    url:  http://127.0.0.1:8500/v1/kv/my-admin-key
    method: PUT
    body: "my-admin-value"
    status_code: 403
    return_content: yes
    headers:
      X-Consul-Token: "{{ admin_team_token.stdout }}"

- name: Test admin token - write key-value to /team/admin is allowed
  uri:
    # curl -v -X PUT --header "X-Consul-Token: <token>" -d 'my-admin-value' http://127.0.0.1:8500/v1/kv/team/admin/my-admin-key
    url:  http://127.0.0.1:8500/v1/kv/team/admin/my-admin-key
    method: PUT
    body: "my-admin-value"
    status_code: 200
    return_content: yes
    headers:
      X-Consul-Token: "{{ admin_team_token.stdout }}"

- name: Test admin token - list all the consul ACL policies is allowed
  uri:
    # curl --header "X-Consul-Token: <token>" http://127.0.0.1:8500/v1/acl/policies
    url: http://127.0.0.1:8500/v1/acl/policies
    method: GET
    headers:
      X-Consul-Token: "{{ admin_team_token.stdout }}"
    status_code: 200
    return_content: yes
    body_format: json
  register: result_policies

- name: Response body result_policies
  debug: msg="Policies are requested by admin -> {{ result_policies.json }}"

# example 2
# 1. Create consul policy for dev team
# 2. Map role to policy
# 3. Generate token(s)
- name: Consul - create dev team policy
  shell:
    cmd: consul acl policy create -name dev-team-policy -rules @/etc/consul.d/policies/dev.team.policy.hcl

- name: Vault - map dev-team role with dev-team-policy to a Consul ACL policy
  shell:
    cmd: vault write consul/roles/dev-team policies=dev-team-policy

- name: Vault - example, generate token for dev-team member
  shell:
    cmd: vault read consul/creds/dev-team -format=json | jq -r .data.token
  register: dev_team_token

- name: Print dev team token
  debug:
    msg: "{{ dev_team_token.stdout }}"

# Test dev.team.policy
- name: Test with dev token - write key-value to root '/' is forbidden
  uri:
    # curl -v -X PUT --header "X-Consul-Token: <token>" -d 'my-dev-value' http://127.0.0.1:8500/v1/kv/my-dev-key
    url:  http://127.0.0.1:8500/v1/kv/my-dev-key
    method: PUT
    body: "my-dev-value"
    status_code: 403
    return_content: yes
    headers:
      X-Consul-Token: "{{ dev_team_token.stdout }}"

- name: Test with dev token - read key-value to /team/dev
  uri:
    # curl -v -X PUT --header "X-Consul-Token: <token>" -d 'my-admin-value' http://127.0.0.1:8500/v1/kv/team/dev/my-dev-key
    url:  http://127.0.0.1:8500/v1/kv/team/dev/my-dev-key
    method: PUT
    body: "my-dev-value"
    status_code: 200
    return_content: yes
    headers:
      X-Consul-Token: "{{ dev_team_token.stdout }}"

- name: Test with dev token - read key-value from /team/admin is forbidden
  uri:
    # curl -v -X PUT --header "X-Consul-Token: <token>" -d 'my-admin-value' http://127.0.0.1:8500/v1/kv/team/dev/my-dev-key
    url:  http://127.0.0.1:8500/v1/kv/team/admin/my-admin-key
    method: GET
    status_code: 403
    return_content: yes
    headers:
      X-Consul-Token: "{{ dev_team_token.stdout }}"

- name: Test with dev token - list all the consul ACL policies is forbidden
  uri:
    # curl --header "X-Consul-Token: <token>" http://127.0.0.1:8500/v1/acl/policies
    url: http://127.0.0.1:8500/v1/acl/policies
    method: GET
    headers:
      X-Consul-Token: "{{ dev_team_token.stdout }}"
    status_code: 403
    return_content: yes
