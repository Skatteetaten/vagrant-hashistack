name: CI/CD
on:
  pull_request:
    branches: [ master ]
    types: [opened, synchronize, reopened, edited, closed, labeled]

jobs:
  cancel-redundant-jobs:
    runs-on: ubuntu-latest
    steps:
      # Use this GitHub Actions at least once in this workflow as soon as possible.
      - uses: technote-space/auto-cancel-redundant-job@v1

  changes:
    runs-on: ubuntu-latest
    # Set job outputs to values from filter step
    outputs:
      doc: ${{ steps.filter.outputs.doc }}
      not-doc: ${{ steps.filter.outputs.not-doc }}
    steps:
      # For pull requests it's not necessary to checkout the code
      - uses: actions/checkout@v2
      - uses: dorny/paths-filter@v2.2.1
        id: filter
        with:
          filters: |
            doc:
              - '**/*.md'
            not-doc:
              - '**/!(*.md)'
  linter:
    runs-on: ubuntu-latest
    if: github.event.action != 'closed'
    steps:
      - uses: actions/checkout@v2
      - name: Super-Linter
        uses: github/super-linter@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VALIDATE_ANSIBLE: true
          VALIDATE_BASH: true
          VALIDATE_DOCKER_HADOLINT: true
          VALIDATE_GO: true
          VALIDATE_HTML: true
          VALIDATE_JAVA: true
          VALIDATE_JSON: true
          VALIDATE_MD: true
          VALIDATE_OPENAPI: true
          VALIDATE_PYTHON: true
          VALIDATE_PYTHON_PYLINT: true
          VALIDATE_PYTHON_FLAKE8: true
          VALIDATE_RUBY: true
          VALIDATE_SQL: true
          VALIDATE_TERRAFORM: true
          VALIDATE_XML: true

  enforce-changelog:
    runs-on: ubuntu-latest
    if: github.event.action != 'closed'
    steps:
      - uses: actions/checkout@v1
      - uses: dangoslen/changelog-enforcer@v1.1.1
        with:
          changeLogPath: 'CHANGELOG.md'
          skipLabel: 'skip-changelog'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build:
    needs: changes
    # Macos includes virtualbox and vagrant.
    runs-on: macos-latest
    if: |
      (
        ( github.event.action == 'closed' &&
          github.event.pull_request.merged == true
        )
        && (
          contains(github.event.pull_request.labels.*.name, 'major') ||
          contains(github.event.pull_request.labels.*.name, 'minor') ||
          contains(github.event.pull_request.labels.*.name, 'patch')
        )
        || (
          github.event.action != 'closed' &&
          needs.changes.outputs.not-doc == 'true'
        )
      )
    steps:
      - uses: actions/checkout@v2

      - name: Versions on runner
        run: make -C install versions

      - name: Run make build
        run: make build

      - name: Make box available as artifact
        uses: actions/upload-artifact@v2
        with:
          name: vagrantbox
          path: packer/output-hashistack/package.box

  test:
    needs: build
    runs-on: macos-latest

    strategy:
      matrix:
        consul_acl: ["consul_acl_enabled", "consul_acl_disabled"]
        consul_acl_default_policy: ["consul_acl_deny"]
        nomad_acl: ["nomad_acl_enabled", "nomad_acl_disabled"]
        hashicorp_binary: ["hashicorp_oss", "hashicorp_enterprise"]

    steps:
      - uses: actions/checkout@v2

      - name: set consul acl (enabled/disabled)
        id: consul_acl
        run: |
          if [ "$test_consul_acl" == 'consul_acl_enabled' ]
          then
              echo "::set-output name=consul_acl::true"
          else
              echo "::set-output name=consul_acl::false"
          fi
        env:
          test_consul_acl: ${{ matrix.consul_acl }}

      - name: set consul acl default policy (allow/deny)
        id: consul_acl_default_policy
        run: |
          if [ "$test_consul_acl_default_policy" == 'consul_acl_allow' ]
          then
              echo "::set-output name=default_policy::allow"
          else
              echo "::set-output name=default_policy::deny"
          fi
        env:
          test_consul_acl_default_policy: ${{ matrix.consul_acl_default_policy }}

      - name: set nomad acl (enabled/disabled)
        id: nomad_acl
        run: |
          if [ "$test_nomad_acl" == 'nomad_acl_enabled' ]
          then
              echo "::set-output name=nomad_acl::true"
          else
              echo "::set-output name=nomad_acl::false"
          fi
        env:
          test_nomad_acl: ${{ matrix.nomad_acl }}

      - name: set hashicorp binary (oss/enterprise)
        id: hashicorp_binary
        run: |
          if [ "$test_hashicorp_binary" == 'hashicorp_oss' ]
          then
              echo "::set-output name=consul_enterprise::false"
              echo "::set-output name=nomad_enterprise::false"
              echo "::set-output name=vault_enterprise::false"
          else
              echo "::set-output name=consul_enterprise::true"
              echo "::set-output name=nomad_enterprise::true"
              echo "::set-output name=vault_enterprise::true"
          fi
        env:
          test_hashicorp_binary: ${{ matrix.hashicorp_binary }}

      - name: Make .env_override in order to matrix test
        run: python .github/action/create-env.py
        env:
          ENVKEY_env_override: true
          ENVKEY_consul_acl: ${{ steps.consul_acl.outputs.consul_acl }}
          ENVKEY_consul_acl_default_policy: ${{ steps.consul_acl_default_policy.outputs.default_policy }}
          ENVKEY_nomad_acl: ${{ steps.nomad_acl.outputs.nomad_acl }}
          ENVKEY_consul_enterprise: ${{ steps.hashicorp_binary.outputs.consul_enterprise }}
          ENVKEY_nomad_enterprise: ${{ steps.hashicorp_binary.outputs.nomad_enterprise }}
          ENVKEY_vault_enterprise: ${{ steps.hashicorp_binary.outputs.vault_enterprise }}
          FILE_NAME: template/template_example/.env_override

      - uses: actions/download-artifact@v2
        with:
          name: vagrantbox
          path: packer/output-hashistack

      - name: Run make test
        run: make test

  release-prerequisites:
    if: |
      contains(github.event.pull_request.labels.*.name, 'major') ||
      contains(github.event.pull_request.labels.*.name, 'minor') ||
      contains(github.event.pull_request.labels.*.name, 'patch')
    runs-on: macos-latest
    outputs:
      bump: ${{ steps.bump.outputs.match }}
      next_version: ${{ steps.next_version.outputs.version }}
      current_version: ${{ fromJson(steps.current_version.outputs.output).data.current_version.version }}
      log_entry: ${{ steps.changelog_reader.outputs.log_entry }}
    steps:
      - uses: actions/checkout@v2
      - id: current_version
        uses: satak/webrequest-action@v1.2.3
        with:
          url: https://app.vagrantup.com/api/v1/box/fredrikhgrelland/hashistack
          method: GET

      - name: Require PR label (major/minor/patch)
        id: bump
        uses: zwaldowski/match-label-action@v1
        with:
          allowed: major,minor,patch

      - id: next_version
        uses: zwaldowski/semver-release-action@v1
        with:
          dry_run: true
          bump: ${{ steps.bump.outputs.match }}
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Get Changelog Entry
        id: changelog_reader
        uses: mindsers/changelog-reader-action@v1.1.0
        with:
          version: ${{ steps.next_version.outputs.version }}
          path: CHANGELOG.md


  release:
    if: github.event.action == 'closed' && github.event.pull_request.merged == true
    needs: 
      - release-prerequisites
      - test

    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2

      - name: Get vagrantbox artifact
        uses: actions/download-artifact@v2
        with:
          name: vagrantbox
          path: packer/output-hashistack

      - name: Authenticate to vagrant cloud
        run: vagrant cloud auth login --token ${{ secrets.VAGRANT_CLOUD_TOKEN }}

      - name: Upload and release vagrantbox on vagrant cloud
        uses: nick-invision/retry@v1
        with:
          timeout_minutes: 10
          max_attempts: 3
          command: vagrant cloud publish --release --force fredrikhgrelland/hashistack ${{ needs.release-prerequisites.outputs.next_version }} virtualbox packer/output-hashistack/package.box --version-description '${{ needs.release-prerequisites.outputs.log_entry }}'

      - name: Create Release on github
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ needs.release-prerequisites.outputs.next_version }}
          release_name: Release v${{ needs.release-prerequisites.outputs.next_version }}
          body: |
            ${{ needs.release-prerequisites.outputs.log_entry }}
          draft: false
          prerelease: false
