name: CI-CD
on:
  pull_request:
    branches: [ master ]
    types: [opened, synchronize, reopened, closed, labeled, unlabeled]
  schedule:
      - cron:  '30 5 * * *' #Daily at 05:30
      #- cron:  '*/15 * * * *' #At every 15th minute.

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

jobs:
  docker-auth:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/upload-artifact@v2
        with:
          name: docker-auth
          path: ~/.docker/config.json

  changes:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    # Set job outputs to values from filter step
    outputs:
      doc: ${{ steps.filter.outputs.doc }}
      not-doc: ${{ steps.filter.outputs.not-doc }}
    steps:
      - uses: dorny/paths-filter@v2.2.1
        id: filter
        with:
          filters: |
            doc:
              - '**/*.md'
            not-doc:
              - '**/!(*.md)'

  linter:
    runs-on: ubuntu-latest
    if: github.event.action != 'closed'
    steps:
      - uses: actions/checkout@v2
        with:
          # Full git history is needed to get a proper list of changed files within `super-linter`
          fetch-depth: 0
      - name: Super-Linter
        uses: github/super-linter@v4
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VALIDATE_TERRAGRUNT: false
          VALIDATE_ALL_CODEBASE: ${{ github.event_name == 'pull_request' && 'false' || 'true' }}

  enforce-changelog:
    runs-on: ubuntu-latest
    if: github.event.action != 'closed' && github.event_name == 'pull_request'
    steps:
      - uses: actions/checkout@v2
      - uses: dangoslen/changelog-enforcer@v2.3.1
        with:
          changeLogPath: 'CHANGELOG.md'
          skipLabels: 'ci/skip-changelog'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build:
    needs: changes
    runs-on: macos-latest # Macos includes virtualbox and vagrant.
    if: |
      always() &&
      (
        ( github.event.action == 'closed' &&
          github.event.pull_request.merged == true
        )
        && (
          contains( github.event.pull_request.labels.*.name, 'change/major') ||
          contains( github.event.pull_request.labels.*.name, 'change/minor') ||
          contains( github.event.pull_request.labels.*.name, 'change/patch')
        )
        || (
          github.event.action != 'closed' &&
          needs.changes.outputs.not-doc == 'true'
        )
        || (
          github.event_name == 'schedule'
        )
      )
    steps:
      - uses: actions/checkout@v2
      - name: Versions on runner
        run: make -C install versions

      - name: Run make build
        run: make build

      - name: Make box available as artifact
        uses: actions/upload-artifact@v2
        with:
          name: vagrantbox
          path: packer/output-hashistack/package.box

  test:
    if: >-
      github.event.action != 'closed'
      && github.event.pull_request.merged != true
    needs:
      - build
      - docker-auth
    runs-on: macos-latest

    strategy:
      matrix:
        consul_acl: ["consul_acl_enabled", "consul_acl_disabled"]
        consul_acl_default_policy: ["consul_acl_deny"]
        nomad_acl: ["nomad_acl_enabled", "nomad_acl_disabled"]
        hashicorp_binary: ["hashicorp_oss", "hashicorp_enterprise"]
        master_token: ["master_token_random"]

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: set consul acl (enabled/disabled)
        id: consul_acl
        run: |
          declare test_consul_acl
          if [ "$test_consul_acl" == 'consul_acl_enabled' ]
          then
              echo "ENVKEY_consul_acl=true" >> "$GITHUB_ENV"
          else
              echo "ENVKEY_consul_acl=false" >> "$GITHUB_ENV"
          fi
        env:
          test_consul_acl: ${{ matrix.consul_acl }}

      - name: set consul acl default policy (allow/deny)
        id: consul_acl_default_policy
        run: |
          declare test_consul_acl_default_policy
          if [ "$test_consul_acl_default_policy" == 'consul_acl_allow' ]
          then
              echo "ENVKEY_consul_acl_default_policy=allow" >> "$GITHUB_ENV"
          else
              echo "ENVKEY_consul_acl_default_policy=deny" >> "$GITHUB_ENV"
          fi
        env:
          test_consul_acl_default_policy: ${{ matrix.consul_acl_default_policy }}

      - name: set nomad acl (enabled/disabled)
        id: nomad_acl
        run: |
          declare test_nomad_acl
          if [ "$test_nomad_acl" == 'nomad_acl_enabled' ]
          then
              echo "ENVKEY_nomad_acl=true" >> "$GITHUB_ENV"
          else
              echo "ENVKEY_nomad_acl=false" >> "$GITHUB_ENV"
          fi
        env:
          test_nomad_acl: ${{ matrix.nomad_acl }}

      - name: set hashicorp binary (oss/enterprise)
        id: hashicorp_binary
        run: |
          declare test_hashicorp_binary
          if [ "$test_hashicorp_binary" == 'hashicorp_oss' ]
          then
              printf "ENVKEY_consul_enterprise=false\nENVKEY_nomad_enterprise=false\nENVKEY_vault_enterprise=false\n" >> "$GITHUB_ENV"
          else
              printf "ENVKEY_consul_enterprise=true\nENVKEY_nomad_enterprise=true\nENVKEY_vault_enterprise=true\n" >> "$GITHUB_ENV"
          fi
        env:
          test_hashicorp_binary: ${{ matrix.hashicorp_binary }}

      - name: set master token (random)
        id: master_token
        run: |
          printf "ENVKEY_nomad_master_token=random\nENVKEY_consul_master_token=random\nENVKEY_vault_master_token=random\n" >> "$GITHUB_ENV"
        env:
          test_master_token: ${{ matrix.master_token }}

      - name: Make .env_override in order to matrix test
        run: python .github/action/create-env.py
        env:
          ENVKEY_env_override: true
          FILE_NAME: template/template_example/.env_override

      - uses: actions/download-artifact@v2
        with:
          name: vagrantbox
          path: packer/output-hashistack

      - uses: actions/download-artifact@v2
        with:
          name: docker-auth
          path: template/template_example/docker/conf/config.json

      - name: Run make test
        run: make test

  release-prerequisites:
    if: always() && github.event_name == 'pull_request'
    needs:
      - enforce-changelog
      - linter

    runs-on: ubuntu-latest
    outputs:
      bump: ${{ steps.bump.outputs.match }}
      next_version: ${{ steps.next_version.outputs.version }}
      log_entry: ${{ steps.changelog_reader.outputs.changes }}
    steps:
      - uses: actions/checkout@v2
      - name: Require PR label (major/minor/patch)
        id: bump
        uses: zwaldowski/match-label-action@v2
        with:
          allowed: change/major,change/minor,change/patch

      - uses: rishabhgupta/split-by@v1
        id: split
        with:
          string: ${{ steps.bump.outputs.match }}
          split-by: '/'

      - id: next_version
        uses: zwaldowski/semver-release-action@v2
        with:
          dry_run: true
          bump: ${{ steps.split.outputs._1 }}
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Find and replace
        run: python .github/action/find-replace.py
        env:
          FIND: "'"
          REPLACE: "'\\''"
          FILE_TO_MODIFY: CHANGELOG.md

      - name: Get Changelog Entry
        id: changelog_reader
        uses: mindsers/changelog-reader-action@v2.0.0
        with:
          version: ${{ steps.next_version.outputs.version }}
          path: ./CHANGELOG.md


  release:
    if: >-
      always()
      && github.event.action == 'closed'
      && github.event.pull_request.merged == true
      && contains( github.event.pull_request.labels.*.name , 'ci/release')
    needs:
      - release-prerequisites
      - build

    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
      - name: Get vagrantbox artifact
        uses: actions/download-artifact@v2
        with:
          name: vagrantbox
          path: packer/output-hashistack

      - name: Authenticate to vagrant cloud
        run: vagrant cloud auth login --token ${{ secrets.VAGRANT_CLOUD_TOKEN }}

      - name: Upload and release vagrantbox on vagrant cloud
        uses: nick-invision/retry@v1
        with:
          timeout_minutes: 10
          max_attempts: 3
          command: vagrant cloud publish --release --force Skatteetaten/hashistack ${{ needs.release-prerequisites.outputs.next_version }} virtualbox packer/output-hashistack/package.box --version-description ' ${{ needs.release-prerequisites.outputs.log_entry }}'

      - name: Create Release on github
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ needs.release-prerequisites.outputs.next_version }}
          release_name: Release v${{ needs.release-prerequisites.outputs.next_version }}
          body: |
            ${{ needs.release-prerequisites.outputs.log_entry }}
          draft: false
          prerelease: false
